var searchIndex = new Map(JSON.parse('[["mscore",{"t":"CCCCCCCCHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHCCCCCCCHHHSSSSSSSSSSSHHHHHHFNNNNNOONNNNNNNNNNNNNNHHHHHHCCPPPGFFFFFPPPNNNNNNNNNNNNNNNNNONNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONNNNNNNONNNNONNNNNOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPFFGFFPKPKNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNONNNNNNNNNNNNOOONNNONNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOMNNNNNNNCCPFFFFPPFGFFPNNNNNNNOOONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNONNNNNNNNOOONNNNNNNNONNNNNNNNOOOONOONNNNNOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNCCCCCKFNNNNNNNMNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNOOONNNNNOONNNNNNNNNNOOOOOONNOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNONNNNNNKFFFNNHMNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNNNNNNNNNNNNNNHNNNNNOONONNNOOOOHHNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNONNNNNOOONNNNNNNNNNOOOOOONOOOOOONNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOOONOOOOONNNNNNNNNNNNNNNONNN","n":["algorithm","chemistry","data","simulation","timstof","isotope","peptide","utility","calculate_transmission_dependent_fragment_ion_isotope_distribution","convolve","convolve_pow","factorial","generate_averagine_spectra","generate_averagine_spectrum","generate_isotope_distribution","generate_isotope_pattern","generate_precursor_spectra","generate_precursor_spectrum","iso","lam","normal_pdf","weight","atomic_product_ion_composition","calculate_amino_acid_composition","calculate_peptide_mono_isotopic_mass","calculate_peptide_product_ion_mono_isotopic_mass","calculate_product_ion_mz","fragments_to_composition","get_num_protonizable_sites","peptide_sequence_to_atomic_composition","simulate_charge_state_for_sequence","simulate_charge_states_for_sequences","accumulated_intensity_cdf_normal","adaptive_integration","calculate_abundance_gaussian","calculate_bounds_emg","calculate_bounds_gaussian","calculate_bounds_normal","calculate_frame_abundance_emg","calculate_frame_abundances_emg_par","calculate_frame_occurrence_emg","calculate_frame_occurrences_emg_par","calculate_scan_abundances_gaussian_par","calculate_scan_occurrence_gaussian","calculate_scan_occurrences_gaussian_par","custom_cdf_normal","emg_cdf_range","emg_function","normal_cdf_range","amino_acid","constants","elements","formulas","sum_formula","unimod","utility","amino_acid_composition","amino_acid_masses","amino_acids","AVOGADRO","ELEMENTARY_CHARGE","K_BOLTZMANN","MASS_CO","MASS_ELECTRON","MASS_NEUTRON","MASS_NH3","MASS_PROTON","MASS_WATER","STANDARD_PRESSURE","STANDARD_TEMPERATURE","atomic_weights_mono_isotopic","atoms_isotopic_weights","isotopic_abundance","calculate_mz","ccs_to_one_over_reduced_mobility","one_over_reduced_mobility_to_ccs","SumFormula","borrow","borrow_mut","deref","deref_mut","drop","elements","formula","from","from_subset","init","into","is_in_subset","isotope_distribution","monoisotopic_weight","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","modification_atomic_composition","unimod_modifications_mass","unimod_modifications_mass_numerical","find_unimod_patterns","reshape_prosit_array","unimod_sequence_to_tokens","peptide","spectrum","A","B","C","FragmentType","PeptideIon","PeptideProductIon","PeptideProductIonSeries","PeptideProductIonSeriesCollection","PeptideSequence","X","Y","Z","amino_acid_count","associate_with_predicted_intensities","atomic_composition","","borrow","","","","","","borrow_decode","borrow_mut","","","","","","c_ions","calculate_isotope_distribution","calculate_isotopic_product_ion_spectrum","calculate_isotopic_product_ion_spectrum_annotated","calculate_isotopic_spectrum","calculate_isotopic_spectrum_annotated","calculate_mono_isotopic_product_ion_spectrum","calculate_mono_isotopic_product_ion_spectrum_annotated","calculate_product_ion_series","charge","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","decode","deref","","","","","","deref_mut","","","","","","deserialize","","","","","","drop","","","","","","encode","find_ion_series","fmt","","","","","","","from","","","","","","from_subset","","","","","","generate_isotopic_spectrum","","generate_isotopic_spectrum_annotated","","generate_mono_isotopic_spectrum","generate_mono_isotopic_spectrum_annotated","init","","","","","","intensity","into","","","","","","ion","is_in_subset","","","","","","isotope_distribution","kind","mono_isotopic_mass","","mz","","n_ions","new","","","","","peptide_id","peptide_ions","sequence","","serialize","","","","","","to_owned","","","","","","to_sage_representation","to_string","to_subset","","","","","","to_subset_unchecked","","","","","","to_tokens","try_from","","","","","","try_into","","","","","","type_id","","","","","","vzip","","","","","","FragmentDda","FragmentDia","IndexedMzSpectrum","IndexedMzSpectrumVectorized","MsType","MzSpectrum","MzSpectrumVectorized","Precursor","ToResolution","Unknown","Vectorized","add","add_mz_noise_normal","add_mz_noise_uniform","borrow","","","","","borrow_decode","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","decode","","default","","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","encode","","eq","filter_ranged","","fmt","","","","","","from","","","","","from_collection","from_subset","","","","","index","","indices","init","","","","","intensity","into","","","","","is_in_subset","","","","","ms_type_numeric","mul","mz","mz_spectrum","mz_vector","new","","","resolution","serialize","","sub","to_centroid","to_dense","to_dense_spectrum","to_owned","","","","","to_resolution","","","to_string","","","to_subset","","","","","to_subset_unchecked","","","","","to_windows","try_from","","","","","try_into","","","","","type_id","","","","","values","vectorized","","","vzip","","","","","annotation","simulation","ChemicalNoise","ContributionSource","MzSpectrumAnnotated","MzSpectrumAnnotatedVectorized","PeakAnnotation","RandomNoise","Signal","SignalAttributes","SourceType","TimsFrameAnnotated","TimsSpectrumAnnotated","Unknown","add","","","add_mz_noise_normal","","add_mz_noise_uniform","","annotations","","","borrow","","","","","","","","borrow_mut","","","","","","","","charge_state","clone","","","","","","","","clone_into","","","","","","","","clone_to_uninit","","","","","","","","contributions","deref","","","","","","","","deref_mut","","","","","","","","description","drop","","","","","","","","eq","filter_ranged","","","fmt","","","","","","","","","frame_id","","from","","","","","","","","from_subset","","","","","","","","from_tims_spectra_annotated","indices","init","","","","","","","","intensity","","intensity_contribution","into","","","","","","","","inv_mobility","is_in_subset","","","","","","","","isotope_peak","mobility","ms_type","","mul","mz","","new","","","","new_random_noise","peptide_id","retention_time","","scan","","signal_attributes","source_type","spectrum","to_owned","","","","","","","","to_resolution","to_string","to_subset","","","","","","","","to_subset_unchecked","","","","","","","","to_tims_spectra_annotated","to_windows","tof","","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","values","vectorized","vzip","","","","","","","","collision","frame","quadrupole","slice","spectrum","TimsTofCollisionEnergy","TimsTofCollisionEnergyDIA","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","get_collision_energy","","init","into","is_in_subset","new","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ImsFrame","ImsFrameVectorized","RawTimsFrame","TimsFrame","TimsFrameVectorized","add","borrow","","","","","borrow_decode","","borrow_mut","","","","","centroid","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","decode","","default","","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","encode","","filter_ranged","","fmt","","","","","frame_id","","","from","","","","","from_subset","","","","","from_tims_spectra","from_windows","generate_random_sample","get_ims_frame","get_inverse_mobility_along_scan_marginal","get_mobility_mean_and_variance","get_tims_spectrum","ims_frame","","indices","init","","","","","intensity","","into","","","","","is_in_subset","","","","","mobility","","ms_type","","","mz","new","","resolution","retention_time","","","scan","","","serialize","","smooth","to_dense_windows","to_indexed_mz_spectrum","to_noise_annotated_tims_frame","to_owned","","","","","to_resolution","to_string","","","to_subset","","","","","to_subset_unchecked","","","","","to_tims_spectra","to_windows","to_windows_indexed","tof","","","top_n","try_from","","","","","try_into","","","","","type_id","","","","","values","vectorized","vzip","","","","","IonTransmission","PASEFMeta","TimsTransmissionDDA","TimsTransmissionDIA","all_transmitted","any_transmitted","apply_transmission","","","","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","collision_energy","deref","","","deref_mut","","","drop","","","fmt","","","frame","frame_to_window_group","from","","","from_subset","","","get_collision_energy","get_setting","get_transmission_set","init","","","into","","","ion_transition_function_midpoint","is_in_subset","","","is_precursor","is_transmitted","isolation_mz","isolation_width","isotopes_transmitted","k","new","","","pasef_meta","precursor","scan_end","scan_start","smooth_step","smooth_step_up_down","to_owned","","","to_subset","","","to_subset_unchecked","","","transmit_annotated_spectrum","transmit_ion","transmit_spectrum","transmit_tims_frame","transmit_tims_frame_annotated","try_from","","","try_into","","","type_id","","","vzip","","","TimsPlane","TimsSlice","TimsSliceFlat","TimsSliceVectorized","TimsSliceVectorizedFlat","borrow","","","","","borrow_mut","","","","","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","deref","","","","","deref_mut","","","","","drop","","","","","filter_ranged","","filter_ranged_ms_type_specific","flatten","","fmt","","frame_id","frame_ids","","frame_map","frames","","from","","","","","from_flat_slice","from_subset","","","","","get_slice_by_type","get_vectors_at_index","indices","init","","","","","intensities","","intensity","into","","","","","is_in_subset","","","","","mobilities","","mobility","mz_mean","mz_std","mzs","new","retention_time","retention_times","","scan","scans","","to_dense_windows","to_owned","","","","","to_resolution","to_subset","","","","","to_subset_unchecked","","","","","to_tims_planes","to_windows","tof_mean","tof_std","tofs","","try_from","","","","","try_into","","","","","type_id","","","","","vectorized","vzip","","","","","TimsSpectrum","TimsSpectrumVectorized","add","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","deref","","deref_mut","","drop","","filter_ranged","fmt","","frame_id","","from","","from_subset","","init","","into","","is_in_subset","","mobility","","ms_type","","new","retention_time","","scan","","spectrum","to_owned","","to_resolution","to_string","to_subset","","to_subset_unchecked","","to_windows","try_from","","try_into","","type_id","","vector","vectorized","vzip",""],"q":[[0,"mscore"],[5,"mscore::algorithm"],[8,"mscore::algorithm::isotope"],[22,"mscore::algorithm::peptide"],[32,"mscore::algorithm::utility"],[49,"mscore::chemistry"],[56,"mscore::chemistry::amino_acid"],[59,"mscore::chemistry::constants"],[70,"mscore::chemistry::elements"],[73,"mscore::chemistry::formulas"],[76,"mscore::chemistry::sum_formula"],[98,"mscore::chemistry::unimod"],[101,"mscore::chemistry::utility"],[104,"mscore::data"],[106,"mscore::data::peptide"],[303,"mscore::data::spectrum"],[467,"mscore::simulation"],[469,"mscore::simulation::annotation"],[703,"mscore::timstof"],[708,"mscore::timstof::collision"],[729,"mscore::timstof::frame"],[902,"mscore::timstof::quadrupole"],[1002,"mscore::timstof::slice"],[1149,"mscore::timstof::spectrum"],[1213,"alloc::vec"],[1214,"std::collections::hash::set"],[1215,"core::option"],[1216,"alloc::string"],[1217,"std::collections::hash::map"],[1218,"core::ops::function"],[1219,"core::result"],[1220,"core::any"],[1221,"bincode::error"],[1222,"bincode::de"],[1223,"serde::de"],[1224,"bincode::enc"],[1225,"core::fmt"],[1226,"serde::ser"],[1227,"nalgebra::base::alias"],[1228,"alloc::collections::btree::map"]],"i":"`````````````````````````````````````````````````````````````````````````````Bn00000000000000000000````````B`00``````000An0Al1Cn312ClCd4253410124422444212534102534102534104253410253410253410253410402553410253410253410101011253410225341032534103334231234104024253410253410452534102534104253410253410253410253410Eb0`````0`0`Ad0010EdEfEh43432104321043210432104342432104321043432104343244332243210343210201432103432104321043320432143331143210El43543543215432145432154321543212F`5465432``Fn````00````0D`FbFd21212Ff1FjFl6Fh6354217063540217063542170635421706354221706354217063540217063547654217706354542170635421706354432170635464121706354421706354055466476542054541152170635467217063542170635446542170635421706354217063543621706354```````Gb000000G`11111111111`````GdGhGfGj3Gl243214033214032140321402424321403214024321402440224403403214032140444444440132140323214032140213402241321340243444321404240321403214044434043214032140321401432140````H`0`0HbHd1Hf1201201201201020120120120102201201123201201`2012300312011000``20120120133333201201201201`````HjHlHnI`Ib43210432104321043210432104321043210434431021034343210443210430432101024321043210102221421021044321044321043210442210432104321043210443210``GnIf101010101101010111101010101010101011010110111010110101010101","f":"````````{{{h{{f{{d{bb}}}}}}{h{{f{{d{bb}}}}}}{h{{l{j}}}}j}{{f{{d{bb}}}}}}{{{h{{f{{d{bb}}}}}}{h{{f{{d{bb}}}}}}bbj}{{f{{d{bb}}}}}}{{{h{{f{{d{bb}}}}}}n}{{f{{d{bb}}}}}}{nb}{{{f{b}}{f{n}}nnnA`j{Ab{b}}}{{f{Ad}}}}{{bnnnnA`{Ab{b}}}Ad}{{{h{{Ah{Afn}}}}bbn}{{f{{d{bb}}}}}}{{bbbbbjbn}{{d{{f{b}}{f{b}}}}}}{{{h{{f{{h{Aj}}}}}}{h{{f{n}}}}j{f{{Ab{n}}}}}{{f{Ad}}}}{{{h{Aj}}n{Ab{n}}}Ad}{{{h{{f{b}}}}bbbbjb}{{f{b}}}}{{bbb}b}0{{b{f{n}}A`}{{f{b}}}}{{{h{Al}}}{{f{{d{{h{Aj}}n}}}}}}{{{h{Aj}}}{{Ah{Afn}}}}{{{h{An}}}b}{{{h{Aj}}B`}b}{{{h{Aj}}B`{Ab{n}}}b}{{{f{Al}}j}{{f{{f{{d{Afn}}}}}}}}{{{h{Aj}}}j}{{{h{An}}}{{Ah{{h{Aj}}n}}}}{{{h{Aj}}{Ab{j}}{Ab{b}}}{{f{b}}}}{{{f{{h{Aj}}}}j{Ab{j}}{Ab{b}}}{{f{{f{b}}}}}}{{bbbb}b}{{{h{Bb}}bbbb}{{d{bb}}}}{{{h{{Ah{nb}}}}{h{{Bd{n}}}}bbb}{{f{b}}}}{{bbbbbbb{Ab{j}}}{{d{bb}}}}{{bbbbbb}{{d{bb}}}}{{bbb}{{d{bb}}}}{{{h{{Ah{nb}}}}{h{{Bd{n}}}}bbbb{Ab{j}}}{{f{b}}}}{{{h{{Ah{nb}}}}{f{{f{n}}}}{f{b}}{f{b}}{f{b}}bj{Ab{j}}}{{f{{f{b}}}}}}{{{h{{Bd{b}}}}bbbbb{Ab{j}}}{{f{n}}}}{{{h{{Bd{b}}}}{f{b}}{f{b}}{f{b}}bbj{Ab{j}}}{{f{{f{n}}}}}}{{{h{{Ah{nb}}}}{f{{f{n}}}}{f{b}}{f{b}}bj}{{f{{f{b}}}}}}{{{h{{Bd{b}}}}bbbbbb}{{f{n}}}}{{{h{{Bd{b}}}}{f{b}}{f{b}}bbbbj}{{f{{f{n}}}}}}{{bbb}b}{{bbbbb{Ab{j}}}b}>>```````{{}{{Ah{Bf{Ah{{h{Aj}}n}}}}}}{{}{{Ah{{h{Aj}}b}}}}{{}{{Ah{{h{Aj}}{h{Aj}}}}}}{{}b}00000000002{{}{{Ah{{h{Aj}}{f{b}}}}}}0{{bn}b}{{bbBhbbb}b}0`{h{{h{c}}}{}}{{{h{Bj}}}{{h{Bjc}}}{}}{j{{h{c}}}{}}{j{{h{Bjc}}}{}}{jBl}{BnAh}{BnAf}{cc{}}{{{h{c}}}e{}{}}{{}j}{{}c{}}{hA`}{{{h{Bn}}n}Ad}{{{h{Bn}}}b}{{{h{Aj}}}Bn}{h{{Ab{c}}}{}}{hc{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{hCb}{{}c{}}{{}{{Ah{Af{Ah{{h{Aj}}n}}}}}}{{}{{Ah{{h{Aj}}b}}}}{{}{{Ah{Bhb}}}}{{{h{Aj}}}{{d{Af{f{b}}}}}}{{{f{b}}}{{f{{f{{f{b}}}}}}}}{{{h{Aj}}A`}{{f{Af}}}}``````````````{{{h{An}}}j}{{{h{An}}nB`{f{b}}A`A`}Cd}{{{h{Al}}}{{Ah{{h{Aj}}n}}}}{{{h{An}}}{{Ah{{h{Aj}}n}}}}{h{{h{c}}}{}}00000{{{h{Bje}}}{{C`{AnCf}}}{}{{Cj{}{{Ch{c}}}}}}{{{h{Bj}}}{{h{Bjc}}}{}}00000{Clf}{{{h{Cn}}bbnb}{{f{{d{bb}}}}}}{{{h{An}}nB`bbnb}Ad}{{{h{An}}nB`bbnb}D`}{{{h{Cn}}bbnb}Ad}{{{h{Cn}}bbnb}D`}{{{h{An}}nB`}Ad}{{{h{An}}nB`}D`}{{{h{An}}nB`}Cl}{Cnn}{Cln}{{{h{Cn}}}Cn}{{{h{B`}}}B`}{{{h{Al}}}Al}{{{h{An}}}An}{{{h{Cl}}}Cl}{{{h{Cd}}}Cd}{{h{h{Bjc}}}Bl{}}00000{{hDb}Bl}00000{{{h{Bje}}}{{C`{AnCf}}}{}{{Dd{}{{Ch{c}}}}}}{j{{h{c}}}{}}00000{j{{h{Bjc}}}{}}00000{c{{C`{Cn}}}Df}{c{{C`{B`}}}Df}{c{{C`{Al}}}Df}{c{{C`{An}}}Df}{c{{C`{Cl}}}Df}{c{{C`{Cd}}}Df}{jBl}00000{{{h{An}}{h{Bjc}}}{{C`{BlDh}}}Dj}{{{h{Cd}}n}{{Ab{{h{Cl}}}}}}{{{h{Cn}}{h{BjDl}}}Dn}{{{h{B`}}{h{BjDl}}}Dn}0{{{h{Al}}{h{BjDl}}}Dn}{{{h{An}}{h{BjDl}}}Dn}{{{h{Cl}}{h{BjDl}}}Dn}{{{h{Cd}}{h{BjDl}}}Dn}{cc{}}00000{{{h{c}}}e{}{}}00000{{{h{Cl}}bbnb}Ad}{{{h{Cd}}bbnb}Ad}{{{h{Cl}}bbnb}D`}{{{h{Cd}}bbnb}D`}{{{h{Cl}}}Ad}{{{h{Cl}}}D`}{{}j}00000{Cnb}{{}c{}}00000{AlCn}{hA`}00000{{{h{Al}}bbnb}{{f{{d{bb}}}}}}{AlB`}{{{h{Al}}}b}{{{h{An}}}b}{{{h{Cn}}}b}2{Clf}{{Afnb{Ab{n}}}Cn}{{B`Afnb{Ab{n}}}Al}{{Af{Ab{n}}}An}{{n{f{Al}}{f{Al}}}Cl}{{{f{Cl}}}Cd}{AnAb}{Cdf}{CnAn}{AnAf}{{{h{Cn}}c}C`E`}{{{h{B`}}c}C`E`}{{{h{Al}}c}C`E`}{{{h{An}}c}C`E`}{{{h{Cl}}c}C`E`}{{{h{Cd}}c}C`E`}{hc{}}00000{{{h{An}}}{{d{Af{f{b}}}}}}{hAf}{h{{Ab{c}}}{}}00000{hc{}}00000{{{h{An}}A`}{{f{Af}}}}{c{{C`{e}}}{}{}}00000{{}{{C`{c}}}{}}00000{hCb}00000{{}c{}}00000```````````{{AdAd}Ad}{{{h{Ad}}b}Ad}{{{h{Ad}}bA`}Ad}{h{{h{c}}}{}}0000{{{h{Bje}}}{{C`{EbCf}}}{}{{Cj{}{{Ch{c}}}}}}{{{h{Bje}}}{{C`{AdCf}}}{}{{Cj{}{{Ch{c}}}}}}{{{h{Bj}}}{{h{Bjc}}}{}}0000{{{h{Eb}}}Eb}{{{h{Ad}}}Ad}{{{h{Ed}}}Ed}{{{h{Ef}}}Ef}{{{h{Eh}}}Eh}{{h{h{Bjc}}}Bl{}}0000{{hDb}Bl}0000{{{h{Bje}}}{{C`{EbCf}}}{}{{Dd{}{{Ch{c}}}}}}{{{h{Bje}}}{{C`{AdCf}}}{}{{Dd{}{{Ch{c}}}}}}{{}Eb}{{}Ed}{j{{h{c}}}{}}0000{j{{h{Bjc}}}{}}0000{c{{C`{Eb}}}Df}{c{{C`{Ad}}}Df}{jBl}0000{{{h{Eb}}{h{Bjc}}}{{C`{BlDh}}}Dj}{{{h{Ad}}{h{Bjc}}}{{C`{BlDh}}}Dj}{{{h{Eb}}{h{Eb}}}A`}{{{h{Ad}}bbbb}Ad}{{{h{Ed}}bbbb}Ed}{{{h{Eb}}{h{BjDl}}}Dn}0{{{h{Ad}}{h{BjDl}}}Dn}0{{{h{Ed}}{h{BjDl}}}Dn}0{cc{}}0000{{{f{Ad}}}Ad}{{{h{c}}}e{}{}}0000{Edf}{Ehf}{Eff}{{}j}0000{Adf}{{}c{}}0000{hA`}0000{{{h{Eb}}}n}{{Adb}c{}}4{EdAd}{EhEf}{nEb}{{{f{b}}{f{b}}}Ad}{{{f{n}}{f{b}}{f{b}}}Ed}{Efn}{{{h{Eb}}c}C`E`}{{{h{Ad}}c}C`E`}{{AdAd}c{}}{{{h{Ad}}nbA`}Ad}{{{h{Ef}}{Ab{j}}}{{Ej{b}}}}{{{h{Ef}}{Ab{j}}}Ef}{hc{}}0000{{{h{El}}n}El}{{{h{Ad}}n}Ad}{{{h{Ed}}n}Ed}{hAf}00{h{{Ab{c}}}{}}0000{hc{}}0000{{{h{Ad}}bA`jb}{{En{nAd}}}}{c{{C`{e}}}{}{}}0000{{}{{C`{c}}}{}}0000{hCb}0000{Eff}{{{h{F`}}n}c{}}{{{h{Ad}}n}Ef}{{{h{Ed}}n}Eh}{{}c{}}0000``````````````{{D`D`}D`}{{FbFb}Fb}{{FdFd}Fd}{{{h{D`}}b}D`}{{{h{Fb}}b}Fb}{{{h{D`}}bA`}D`}{{{h{Fb}}bA`}Fb}{D`f}{Fff}{Fdf}{h{{h{c}}}{}}0000000{{{h{Bj}}}{{h{Bjc}}}{}}0000000{Fhn}{{{h{Fj}}}Fj}{{{h{Fl}}}Fl}{{{h{Fn}}}Fn}{{{h{Fh}}}Fh}{{{h{D`}}}D`}{{{h{Ff}}}Ff}{{{h{Fb}}}Fb}{{{h{Fd}}}Fd}{{h{h{Bjc}}}Bl{}}0000000{{hDb}Bl}0000000{Fjf}{j{{h{c}}}{}}0000000{j{{h{Bjc}}}{}}0000000{FhAb}{jBl}0000000{{{h{Fn}}{h{Fn}}}A`}{{{h{D`}}bbbb}D`}{{{h{Fb}}bbbb}Fb}{{{h{Fd}}bbbbBhBhbb}Fd}{{{h{Fj}}{h{BjDl}}}Dn}{{{h{Fl}}{h{BjDl}}}Dn}{{{h{Fn}}{h{BjDl}}}Dn}0{{{h{Fh}}{h{BjDl}}}Dn}{{{h{D`}}{h{BjDl}}}Dn}{{{h{Ff}}{h{BjDl}}}Dn}{{{h{Fb}}{h{BjDl}}}Dn}{{{h{Fd}}{h{BjDl}}}Dn}{Fbn}{Fdn}{cc{}}0000000{{{h{c}}}e{}{}}0000000{{{f{Fb}}}Fd}{Fff}{{}j}0000000{D`f}{Fdf}{Flb}{{}c{}}00000002{hA`}0000000{Fhn}{Fbb}{FbEb}{FdEb}{{D`b}c{}}98{nFn}{{{f{b}}{f{b}}{f{Fj}}}D`}{{nBhbbEb{f{Bh}}D`}Fb}{{nbEb{f{Bh}}{f{b}}{f{Bh}}{f{b}}{f{b}}{f{Fj}}}Fd}{bFj}98{Fdb}{FbBh}?{FlAb}{FlFn}{FbD`}{hc{}}0000000{{{h{D`}}n}D`}{hAf}{h{{Ab{c}}}{}}0000000{hc{}}0000000{{{h{Fd}}}{{f{Fb}}}}{{{h{D`}}bA`jb}{{En{nD`}}}}{Fbf}{Fdf}{c{{C`{e}}}{}{}}0000000{{}{{C`{c}}}{}}0000000{hCb}0000000{Fff}{{{h{D`}}n}Ff}{{}c{}}0000000```````{h{{h{c}}}{}}{{{h{Bj}}}{{h{Bjc}}}{}}{j{{h{c}}}{}}{j{{h{Bjc}}}{}}{jBl}{cc{}}{{{h{c}}}e{}{}}{{{h{G`}}nn}b}{{{h{Gb}}nn}b}{{}j}{{}c{}}{hA`}{{{f{n}}{f{n}}{f{n}}{f{n}}{f{n}}{f{b}}}Gb}{h{{Ab{c}}}{}}{hc{}}{c{{C`{e}}}{}{}}{{}{{C`{c}}}{}}{hCb}{{}c{}}`````{{GdGd}Gd}{h{{h{c}}}{}}0000{{{h{Bje}}}{{C`{GfCf}}}{}{{Cj{}{{Ch{c}}}}}}{{{h{Bje}}}{{C`{GdCf}}}{}{{Cj{}{{Ch{c}}}}}}{{{h{Bj}}}{{h{Bjc}}}{}}0000{{GhBh}Gh}{{{h{Gh}}}Gh}{{{h{Gf}}}Gf}{{{h{Gj}}}Gj}{{{h{Gd}}}Gd}{{{h{Gl}}}Gl}{{h{h{Bjc}}}Bl{}}0000{{hDb}Bl}0000{{{h{Bje}}}{{C`{GfCf}}}{}{{Dd{}{{Ch{c}}}}}}{{{h{Bje}}}{{C`{GdCf}}}{}{{Dd{}{{Ch{c}}}}}}{{}Gf}{{}Gd}{j{{h{c}}}{}}0000{j{{h{Bjc}}}{}}0000{c{{C`{Gf}}}Df}{c{{C`{Gd}}}Df}{jBl}0000{{{h{Gf}}{h{Bjc}}}{{C`{BlDh}}}Dj}{{{h{Gd}}{h{Bjc}}}{{C`{BlDh}}}Dj}{{{h{Gd}}bbnnbbbb}Gd}{{{h{Gl}}bbnnbbbb}Gl}{{{h{Gf}}{h{BjDl}}}Dn}0{{{h{Gd}}{h{BjDl}}}Dn}0{{{h{Gl}}{h{BjDl}}}Dn}{Ghn}{Gdn}{Gln}{cc{}}0000{{{h{c}}}e{}{}}0000{{{f{Gn}}}Gd}0{{{h{Gd}}b}Gd}{{{h{Gd}}}Gf}{{{h{Gd}}}b}{{{h{Gd}}}{{d{bb}}}}{{{h{Gd}}n}{{Ab{Gn}}}}{GdGf}{GlGj}{Gjf}{{}j}0000{Ghf}{Gff}{{}c{}}0000{hA`}000025{GhEb}{GdEb}{GlEb}5{{b{f{b}}{f{b}}{f{b}}}Gf}{{nEbb{f{n}}{f{b}}{f{n}}{f{b}}{f{b}}}Gd}{Gjn}{Ghb}{Gfb}{Gjb}<{Gdf}{Glf}{{{h{Gf}}c}C`E`}{{{h{Gd}}c}C`E`}{{GhBh}Gh}{{{h{Gd}}bA`jbn}{{d{{f{b}}{f{n}}{f{n}}jj}}}}{{{h{Gd}}}Ed}{{{h{Gd}}}Fd}{hc{}}0000{{{h{Gd}}n}Gd}{hAf}00{h{{Ab{c}}}{}}0000{hc{}}0000{{{h{Gd}}}{{f{Gn}}}}{{{h{Gd}}bA`jb}{{f{Gn}}}}{{{h{Gd}}bA`jb}{{d{{f{n}}{f{n}}{f{Gn}}}}}}{Ghf}{Gdf}{Glf}{{{h{Gd}}j}Gd}{c{{C`{e}}}{}{}}0000{{}{{C`{c}}}{}}0000{hCb}0000{Gjf}{{{h{Gd}}n}Gl}{{}c{}}0000````{{{h{H`}}nn{h{{f{b}}}}{Ab{b}}}A`}0{{bbb{f{b}}}{{f{b}}}}{{{h{H`}}nn{h{{f{b}}}}}{{f{b}}}}{{{h{Hb}}nn{h{{f{b}}}}}{{f{b}}}}{{{h{Hd}}nn{h{{f{b}}}}}{{f{b}}}}{h{{h{c}}}{}}00{{{h{Bj}}}{{h{Bjc}}}{}}00{{{h{Hb}}}Hb}{{{h{Hf}}}Hf}{{{h{Hd}}}Hd}{{h{h{Bjc}}}Bl{}}00{{hDb}Bl}00{Hfb}{j{{h{c}}}{}}00{j{{h{Bjc}}}{}}00{jBl}00{{{h{Hb}}{h{BjDl}}}Dn}{{{h{Hf}}{h{BjDl}}}Dn}{{{h{Hd}}{h{BjDl}}}Dn}{Hfn}{{{h{Hb}}n}n}{cc{}}00{{{h{c}}}e{}{}}00{{{h{Hd}}nn}{{Ab{b}}}}{{{h{Hb}}nn}{{Ab{{h{{d{bb}}}}}}}}{{{h{H`}}nn{h{{f{b}}}}{Ab{b}}}{{l{j}}}}{{}j}00{{}c{}}00{{bbb}{{`{{Bb{{f{b}}}{{Hh{{f{b}}}}}}}}}}{hA`}00{{{h{Hb}}n}A`}{{{h{H`}}nnb{Ab{b}}}A`}{Hfb}0{{{h{H`}}nnb{h{{f{b}}}}{Ab{b}}}{{d{b{f{{d{bb}}}}}}}}{Hdb}{{{f{n}}{f{n}}{f{n}}{f{n}}{f{n}}{f{b}}{f{b}}{Ab{b}}}Hb}{{nnnbbbn}Hf}{{{f{Hf}}{Ab{b}}}Hd}{HdEn}{Hfn}00{{{h{{f{b}}}}bbb}{{f{b}}}}{{{h{{f{b}}}}bbbbb}{{f{b}}}}{hc{}}00{h{{Ab{c}}}{}}00{hc{}}00{{{h{H`}}nnD`{Ab{b}}}D`}{{{h{H`}}{f{n}}{f{n}}Ad{Ab{b}}}{{f{{f{Ad}}}}}}{{{h{H`}}nnAd{Ab{b}}}Ad}{{{h{H`}}{h{Gd}}{Ab{b}}}Gd}{{{h{H`}}{h{Fd}}{Ab{b}}}Fd}{c{{C`{e}}}{}{}}00{{}{{C`{c}}}{}}00{hCb}00{{}c{}}00`````{h{{h{c}}}{}}0000{{{h{Bj}}}{{h{Bjc}}}{}}0000{{{h{Hj}}}Hj}{{{h{Hl}}}Hl}{{{h{Hn}}}Hn}{{{h{I`}}}I`}{{{h{Ib}}}Ib}{{h{h{Bjc}}}Bl{}}0000{{hDb}Bl}0000{j{{h{c}}}{}}0000{j{{h{Bjc}}}{}}0000{jBl}0000{{{h{Hj}}bbnnbbbbj}Hj}{{{h{Hl}}bbnnbbbbj}Hl}{{{h{Hj}}bbnnbbbbbbnnbbbbj}Hj}{{{h{Hj}}}I`}{{{h{Hl}}}Ib}{{{h{I`}}{h{BjDl}}}Dn}{{{h{Ib}}{h{BjDl}}}Dn}{Hnf}{I`f}{Ibf}{HlEn}{Hjf}{Hlf}{cc{}}0000{{{f{n}}{f{n}}{f{n}}{f{b}}{f{b}}{f{b}}{f{b}}}Hj}{{{h{c}}}e{}{}}0000{{{h{Hj}}Eb}Hj}{{{h{Hl}}Bh}{{Ab{{d{{f{Bh}}{f{Bh}}{f{Id}}}}}}}}8{{}j}0000:9;{{}c{}}0000{hA`}0000<;={Hnb}0={{{f{Gd}}}Hj}?>=?>={{{h{Hj}}bA`jbnj}{{f{{d{{f{b}}{f{n}}{f{n}}jj}}}}}}{hc{}}0000{{{h{Hj}}nj}Hj}{h{{Ab{c}}}{}}0000{hc{}}0000{{{h{Hj}}nnj}{{f{Hn}}}}{{{h{Hj}}bA`jbj}{{f{Gn}}}}88{I`f}{Ibf}{c{{C`{e}}}{}{}}0000{{}{{C`{c}}}{}}0000{hCb}0000{{{h{Hj}}nj}Hl}{{}c{}}0000``{{GnGn}Gn}{h{{h{c}}}{}}0{{{h{Bj}}}{{h{Bjc}}}{}}0{{{h{If}}}If}{{{h{Gn}}}Gn}{{h{h{Bjc}}}Bl{}}0{{hDb}Bl}0{{}Gn}{j{{h{c}}}{}}0{j{{h{Bjc}}}{}}0{jBl}0{{{h{Gn}}bbbb}Gn}{{{h{Gn}}{h{BjDl}}}Dn}0{Ifn}{Gnn}{cc{}}0{{{h{c}}}e{}{}}0{{}j}0{{}c{}}0{hA`}0{Ifb}{Gnb}{IfEb}{GnEb}{{nnbbEbEd}Gn}43;:{GnEd}{hc{}}0{{{h{Gn}}n}Gn}{hAf}{h{{Ab{c}}}{}}0{hc{}}0{{{h{Gn}}bA`jb}{{En{nGn}}}}{c{{C`{e}}}{}{}}0{{}{{C`{c}}}{}}0{hCb}0{IfEh}{{{h{Gn}}n}If}{{}c{}}0","D":"ABn","p":[[1,"f64"],[1,"tuple",null,null,1],[5,"Vec",1213],[1,"reference",null,null,1],[1,"usize"],[5,"HashSet",1214],[1,"i32"],[1,"bool"],[6,"Option",1215,null,1],[5,"MzSpectrum",303],[5,"String",1216],[5,"HashMap",1217],[1,"str"],[5,"PeptideProductIon",106],[5,"PeptideSequence",106],[6,"FragmentType",106],[10,"Fn",1218],[1,"slice"],[1,"char"],[1,"u32"],[0,"mut"],[1,"unit"],[5,"SumFormula",76],[6,"Result",1219,null,1],[5,"TypeId",1220],[5,"PeptideProductIonSeriesCollection",106],[6,"DecodeError",1221],[17,"Context"],[10,"BorrowDecoder",1222],[5,"PeptideProductIonSeries",106],[5,"PeptideIon",106],[5,"MzSpectrumAnnotated",469],[1,"u8"],[10,"Decoder",1222],[10,"Deserializer",1223],[6,"EncodeError",1221],[10,"Encoder",1224],[5,"Formatter",1225],[8,"Result",1225],[10,"Serializer",1226],[6,"MsType",303],[5,"IndexedMzSpectrum",303],[5,"MzSpectrumVectorized",303],[5,"IndexedMzSpectrumVectorized",303],[8,"DVector",1227],[10,"ToResolution",303],[5,"BTreeMap",1228],[10,"Vectorized",303],[5,"TimsSpectrumAnnotated",469],[5,"TimsFrameAnnotated",469],[5,"MzSpectrumAnnotatedVectorized",469],[5,"SignalAttributes",469],[5,"PeakAnnotation",469],[5,"ContributionSource",469],[6,"SourceType",469],[10,"TimsTofCollisionEnergy",708],[5,"TimsTofCollisionEnergyDIA",708],[5,"TimsFrame",729],[5,"ImsFrame",729],[5,"RawTimsFrame",729],[5,"ImsFrameVectorized",729],[5,"TimsFrameVectorized",729],[5,"TimsSpectrum",1149],[10,"IonTransmission",902],[5,"TimsTransmissionDIA",902],[5,"TimsTransmissionDDA",902],[5,"PASEFMeta",902],[17,"Output"],[5,"TimsSlice",1002],[5,"TimsSliceVectorized",1002],[5,"TimsPlane",1002],[5,"TimsSliceFlat",1002],[5,"TimsSliceVectorizedFlat",1002],[1,"f32"],[5,"TimsSpectrumVectorized",1149]],"r":[],"b":[[192,"impl-Display-for-FragmentType"],[193,"impl-Debug-for-FragmentType"],[370,"impl-Debug-for-MsType"],[371,"impl-Display-for-MsType"],[372,"impl-Debug-for-MzSpectrum"],[373,"impl-Display-for-MzSpectrum"],[374,"impl-Debug-for-IndexedMzSpectrum"],[375,"impl-Display-for-IndexedMzSpectrum"],[564,"impl-Display-for-SourceType"],[565,"impl-Debug-for-SourceType"],[788,"impl-Debug-for-ImsFrame"],[789,"impl-Display-for-ImsFrame"],[790,"impl-Display-for-TimsFrame"],[791,"impl-Debug-for-TimsFrame"],[1170,"impl-Debug-for-TimsSpectrum"],[1171,"impl-Display-for-TimsSpectrum"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAACYENAAAAAkAFgAAACEAAQAkAAAAJgAEAC0AAwAyAAYAPAAKAE0ABwBWAAEAWQAJAGkAXQDNABIA5gBLADMBAAA2AQEAOQEAADwBPAB+AQ4AkgEEAJgBAwCfAQwArgEMALwBEADPAW4ARgIUAGMCaADNAgMA0gJAABQDCAAiAwcAKwMAAC0DCgA9AwoASgMfAGsDHwCOAyAAsgMEALgDAgC/AwMAxAMKANEDCADbAwAA3wM4ABkECwAqBAUAMQQJAEAECgBMBEoAmQQDAJ8EBQCmBBcA","P":[[77,"T"],[81,""],[84,"T"],[85,"SS,SP"],[86,""],[87,"U"],[88,""],[92,"SS"],[94,"U,T"],[95,"U"],[96,""],[97,"V"],[98,""],[122,"T"],[128,"__Context,__D"],[129,"T"],[135,""],[152,"T"],[158,""],[164,"__Context,__D"],[165,"T"],[177,"__D"],[183,""],[189,"__E"],[190,""],[198,"T"],[204,"SS,SP"],[210,""],[223,"U"],[229,""],[252,"__S"],[258,"T"],[264,""],[266,"SS"],[278,""],[279,"U,T"],[285,"U"],[291,""],[297,"V"],[314,""],[317,"T"],[322,"__Context,__D"],[324,"T"],[329,""],[334,"T"],[339,""],[344,"__Context,__D"],[346,""],[348,"T"],[358,"__D"],[360,""],[365,"__E"],[367,""],[376,"T"],[381,""],[382,"SS,SP"],[387,""],[396,"U"],[401,""],[407,"Mul::Output"],[408,""],[415,"__S"],[417,"Sub::Output"],[418,""],[421,"T"],[426,""],[432,"SS"],[442,""],[443,"U,T"],[448,"U"],[453,""],[459,"T"],[460,""],[462,"V"],[481,""],[491,"T"],[507,""],[516,"T"],[524,""],[533,"T"],[549,""],[573,"T"],[581,"SS,SP"],[589,""],[602,"U"],[610,""],[623,"Mul::Output"],[624,""],[639,"T"],[647,""],[649,"SS"],[665,""],[669,"U,T"],[677,"U"],[685,""],[695,"V"],[710,"T"],[714,""],[715,"T"],[716,"SS,SP"],[717,""],[720,"U"],[721,""],[723,"SS"],[725,"U,T"],[726,"U"],[727,""],[728,"V"],[734,""],[735,"T"],[740,"__Context,__D"],[742,"T"],[747,""],[753,"T"],[758,""],[763,"__Context,__D"],[765,""],[767,"T"],[777,"__D"],[779,""],[784,"__E"],[786,""],[796,"T"],[801,"SS,SP"],[806,""],[823,"U"],[828,""],[848,"__S"],[850,""],[854,"T"],[859,""],[863,"SS"],[873,""],[880,"U,T"],[885,"U"],[890,""],[897,"V"],[906,""],[912,"T"],[918,""],[921,"T"],[924,""],[928,"T"],[934,""],[942,"T"],[945,"SS,SP"],[948,""],[954,"U"],[957,""],[976,"T"],[979,"SS"],[985,""],[990,"U,T"],[993,"U"],[996,""],[999,"V"],[1007,"T"],[1017,""],[1022,"T"],[1027,""],[1032,"T"],[1042,""],[1060,"T"],[1065,""],[1066,"SS,SP"],[1071,""],[1082,"U"],[1087,""],[1106,"T"],[1111,""],[1112,"SS"],[1122,""],[1128,"U,T"],[1133,"U"],[1138,""],[1144,"V"],[1151,""],[1152,"T"],[1156,""],[1158,"T"],[1160,""],[1163,"T"],[1167,""],[1174,"T"],[1176,"SS,SP"],[1178,""],[1180,"U"],[1182,""],[1194,"T"],[1196,""],[1198,"SS"],[1202,""],[1203,"U,T"],[1205,"U"],[1207,""],[1211,"V"]]}],["rustdf",{"t":"CCCCCCCCCCGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNNNNNNNNNFFNNNNNNNONNNNNNONNNNNNNNNNNNNNNNNNNNNONNONONNNNNNNNNNNNNNFNNNNOONNNNNNNNNONNNNOONNNNNNNNNNNNPFPKPPFKGFGFFONNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNMNNNMNNNMNNNMNNNNMNNNMNNNOOONNNNNNNNNNNNNNMNNNNNNNNNNOMNNNNNNNOOOOOMNNNONNNNNNNNNNNNNNOOMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFFFFFFFFFOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNONNNNNNNNNNONNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOHHHHHHOOOOOOOOOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOFNNNNNNNNONNNNONNNNNNNNNNNHHHHHHHHHHHHCCCCCCFFFFFFFFONNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNOOOOONNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNOONNNNNNNNOOOOOOOOONNNNNNNNONOOOOOOOOOOOOONOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNOOFNNNNNNNNNNOONNNNNNNNNOONNONNNNFNNNNNNNNNNNNOOONNNNNNNNNOONNONNNNFNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNOOONNNNONNOOOOOONNNNNNHHH","n":["data","sim","acquisition","dataset","dda","dia","handle","meta","raw","utility","AcquisitionMode","DDA","DIA","PRECURSOR","Unknown","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt","","from","","","from_subset","init","into","is_in_subset","to_i32","to_owned","to_str","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","TimsDataset","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","get_acquisition_mode","get_data_path","get_frame","get_frame_count","get_raw_frame","get_slice","init","into","inverse_mobility_to_scan","is_in_subset","loader","mz_to_tof","new","scan_to_inverse_mobility","to_subset","to_subset_unchecked","tof_to_mz","try_from","try_into","type_id","vzip","PASEFDDAFragment","TimsDatasetDDA","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","collision_energy","deref","","deref_mut","","drop","","frame_id","from","","from_subset","","get_acquisition_mode","get_data_path","get_frame","get_frame_count","get_pasef_fragments","get_pasef_frame_ms_ms_info","get_precursor_frames","get_raw_frame","get_selected_precursors","get_slice","init","","into","","inverse_mobility_to_scan","is_in_subset","","loader","mz_to_tof","new","precursor_id","scan_to_inverse_mobility","selected_fragment","to_owned","to_subset","","to_subset_unchecked","","tof_to_mz","try_from","","try_into","","type_id","","vzip","","TimsDatasetDIA","borrow","borrow_mut","deref","deref_mut","dia_ms_mis_info","dia_ms_ms_windows","drop","from","from_subset","get_acquisition_mode","get_data_path","get_frame","get_frame_count","get_raw_frame","get_slice","global_meta_data","init","into","inverse_mobility_to_scan","is_in_subset","loader","meta_data","mz_to_tof","new","sample_fragment_signal","sample_precursor_signal","scan_to_inverse_mobility","to_subset","to_subset_unchecked","tof_to_mz","try_from","try_into","type_id","vzip","BrukerLib","BrukerLibTimsDataConverter","InMemory","IndexConverter","Lazy","Simple","SimpleIndexConverter","TimsData","TimsDataLoader","TimsInMemoryLoader","TimsIndexConverter","TimsLazyLoder","TimsRawDataLayout","acquisition_mode","borrow","","","","","","","borrow_mut","","","","","","","bruker_lib","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","frame_id_ptr","frame_meta_data","from","","","","","","","from_boundaries","from_subset","","","","","","","get_acquisition_mode","","","","get_data_path","","","","get_frame","","","","get_frame_count","","","","get_index_converter","get_raw_frame","","","","get_slice","","","","global_meta_data","index_converter","","init","","","","","","","into","","","","","","","inverse_mobility_to_scan","","","","is_in_subset","","","","","","","max_scan_count","mz_to_tof","","","","new","","new_in_memory","new_lazy","raw_data_layout","","raw_data_path","scan_intercept","scan_slope","scan_to_inverse_mobility","","","","tims_offset_values","to_subset","","","","","","","to_subset_unchecked","","","","","","","tof_intercept","tof_slope","tof_to_mz","","","","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","DDAFragmentInfo","DDAPrecursor","DDAPrecursorMeta","DIAFragmentFrameInfo","DIAWindowGroupInfo","DiaMsMisInfo","DiaMsMsWindow","FrameMeta","GlobalMetaData","PasefMsMsMeta","accumulation_time","acquisition_software_vendor","average_mz","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","charge","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","closed_property","collision_energy","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","drop","","","","","","","","","","fmt","","","","","","","","frame_id","","","","from","","","","","","","","","","from_subset","","","","","","","","","","highest_intensity_mz","id","init","","","","","","","","","","instrument_vendor","into","","","","","","","","","","inverse_ion_mobility","is_in_subset","","","","","","","","","","isolation_mz","","","","isolation_width","","","","max_intensity","max_num_peaks_per_scan","mono_mz","ms_ms_type","mz_acquisition_range_lower","mz_acquisition_range_upper","mz_calibration","num_peaks","num_scans","one_over_k0_range_lower","one_over_k0_range_upper","polarity","precuror_total_intensity","precursor_average_scan_number","precursor_charge","precursor_frame_id","precursor_id","","","","precursor_mz_average","precursor_mz_highest_intensity","precursor_mz_monoisotopic","precursor_total_intensity","property_group","ramp_time","read_dda_precursor_meta","read_dia_ms_ms_info","read_dia_ms_ms_windows","read_global_meta_sql","read_meta_data_sql","read_pasef_frame_ms_ms_info","scan_begin","scan_end","scan_mode","scan_num_begin","","scan_num_end","","schema_type","schema_version_major","schema_version_minor","sum_intensity","t_1","t_2","time","tims_calibration","tims_compression_type","tims_id","to_owned","","","","","","to_subset","","","","","","","","","","to_subset_unchecked","","","","","","","","","","tof_max_index","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","vzip","","","","","","","","","","window_group","","BrukerTimsDataLibrary","borrow","borrow_mut","deref","deref_mut","drop","","from","from_subset","handle","init","into","inv_mob_to_tims_scan","is_in_subset","lib","new","tims_close","tims_index_to_mz","tims_mz_to_index","tims_scan_to_inv_mob","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","compress_collection","flatten_scan_values","get_data_for_compression","get_data_for_compression_par","get_peak_cnts","get_realdata","get_realdata_loop","modify_tofs","parse_decompressed_bruker_binary_data","reconstruct_compressed_data","zstd_compress","zstd_decompress","containers","dda","dia","handle","precursor","utility","FragmentIonSim","FrameToWindowGroupSim","FramesSim","IonSim","PeptidesSim","ScansSim","SignalDistribution","WindowGroupSettingsSim","abundance","add_noise","borrow","","","","","","","","borrow_mut","","","","","","","","c_term","charge","","clone","","","","","","","clone_into","","","","","","","clone_to_uninit","","","","","","","collision_energy","","decoy","deref","","","","","","","","deref_mut","","","","","","","","deserialize","drop","","","","","","","","error","events","fmt","","","","","","","frame_distribution","frame_end","frame_id","","frame_start","from","","","","","","","","from_subset","","","","","","","","indices","init","","","","","","","","into","","","","","","","","ion_id","","is_in_subset","","","","","","","","isolation_mz","isolation_width","mean","missed_cleavages","mobility","","mono_isotopic_mass","ms_type","n_term","new","","","","","","","","occurrence","parse_ms_type","peptide_id","","","protein_id","proteins","relative_abundance","retention_time","scan","scan_distribution","scan_end","scan_start","sequence","","serialize","simulated_spectrum","time","to_dense","to_owned","","","","","","","to_subset","","","","","","","","to_subset_unchecked","","","","","","","","try_from","","","","","","","","try_into","","","","","","","","type_id","","","","","","","","values","variance","vzip","","","","","","","","window_group","","TimsTofSyntheticsFrameBuilderDDA","borrow","borrow_mut","build_fragment_frame_annotated","build_frame","build_frame_annotated","build_frames","build_frames_annotated","deref","deref_mut","drop","fragment_ions","fragment_ions_annotated","from","from_subset","get_collision_energies","get_collision_energy","get_fragment_ion_ids","init","into","is_in_subset","new","path","precursor_frame_builder","to_subset","to_subset_unchecked","transmission_settings","try_from","try_into","type_id","vzip","TimsTofSyntheticsFrameBuilderDIA","borrow","borrow_mut","build_fragment_frame_annotated","build_frame","build_frame_annotated","build_frames","build_frames_annotated","count_number_transmissions","count_number_transmissions_parallel","deref","deref_mut","drop","fragment_ions","fragment_ions_annotated","fragmentation_settings","from","from_subset","get_collision_energy","get_fragment_ion_ids","get_ion_transmission_matrix","init","into","is_in_subset","new","path","precursor_frame_builder","to_subset","to_subset_unchecked","transmission_settings","try_from","try_into","type_id","vzip","TimsTofSyntheticsDataHandle","borrow","borrow_mut","build_fragment_ions","build_fragment_ions_annotated","build_frame_to_abundances","build_frame_to_rt","build_peptide_map","build_peptide_to_events","build_peptide_to_ion_map","build_peptide_to_ions","build_precursor_frame_id_set","build_scan_to_mobility","connection","deref","deref_mut","drop","fmt","from","from_subset","get_collision_energy_dia","get_transmission_dda","get_transmission_dia","get_transmitted_ions","init","into","is_in_subset","new","read_fragment_ions","read_frame_to_window_group","read_frames","read_ions","read_pasef_meta","read_peptides","read_scans","read_window_group_settings","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","TimsTofSyntheticsPrecursorFrameBuilder","borrow","borrow_mut","build_precursor_frame","build_precursor_frame_annotated","build_precursor_frames","build_precursor_frames_annotated","deref","deref_mut","drop","frame_to_abundances","frame_to_rt","frames","from","from_subset","init","into","ions","is_in_subset","new","peptide_to_events","peptide_to_ions","peptides","precursor_frame_id_set","scan_to_mobility","scans","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","reshape_prosit_array","sequence_to_all_ions","sequence_to_all_ions_par"],"q":[[0,"rustdf"],[2,"rustdf::data"],[10,"rustdf::data::acquisition"],[42,"rustdf::data::dataset"],[71,"rustdf::data::dda"],[129,"rustdf::data::dia"],[164,"rustdf::data::handle"],[351,"rustdf::data::meta"],[630,"rustdf::data::raw"],[656,"rustdf::data::utility"],[668,"rustdf::sim"],[674,"rustdf::sim::containers"],[904,"rustdf::sim::dda"],[935,"rustdf::sim::dia"],[969,"rustdf::sim::handle"],[1011,"rustdf::sim::precursor"],[1043,"rustdf::sim::utility"],[1046,"core::fmt"],[1047,"alloc::string"],[1048,"core::option"],[1049,"core::result"],[1050,"core::any"],[1051,"mscore::timstof::frame"],[1052,"alloc::vec"],[1053,"mscore::timstof::slice"],[1054,"core::error"],[1055,"alloc::boxed"],[1056,"rusqlite"],[1057,"std::os::raw"],[1058,"libloading::safe"],[1059,"std::io::error"],[1060,"serde::de"],[1061,"mscore::data::spectrum"],[1062,"mscore::data::peptide"],[1063,"serde::ser"],[1064,"mscore::simulation::annotation"],[1065,"alloc::collections::btree::map"],[1066,"std::path"],[1067,"mscore::timstof::quadrupole"],[1068,"mscore::timstof::collision"],[1069,"std::collections::hash::set"]],"i":"```````````f000000000000000000000000000000`B`000000000000000000000000000``CbC`100000101010010101111111111101011011101001010110101010`Ch000000000000000000000000000000000Dl`Bn`01```````Cl0Cn3DfDh4Db4362150343621504362150436215044436215004362150Dd32603260326032660326032653254732615473261Dj58265843726058265774362205826658437265843722205826584372658437265843726584372``````````E`CjCfJhJjEbEdCdEf6Eh8965432170897432170432170432170832706543217089654321708965432170894321708942706543217089654321708979654321708986543217089765432170893270327098798899988971112170111199``````00932328889999989432170654321708965432170898654321708965432170896543217089654321708943`D`000000000000000000000000``````````````````````````Fl0Gb1G`GhGjGfGlGn67543210562754321075432107543210645675432106754321076754321075754321055305675432106754321066754321067543210626754321044752150567543210706525525124452720675432106754321067543210675432106754321067543210676754321043`Hj00000000000000000000000000000`Ij00000000000000000000000000000000`Jb0000000000000000000000000000000000000000`If000000000000000000000000000000```","f":"```````````````{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{f}}}f}{{b{b{dc}}}h{}}{{bj}h}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{f}}{b{dn}}}A`}0{Abf}{{{b{Ad}}}f}{cc{}}{{{b{c}}}e{}{}}{{}l}{{}c{}}{bAf}{{{b{f}}}Ab}{bc{}}{{{b{f}}}{{b{Ad}}}}{bAh}{b{{Aj{c}}}{}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{cc{}}{{{b{c}}}e{}{}}{{{b{B`}}}f}{{{b{B`}}}{{b{Ad}}}}{{{b{B`}}Bb}Bd}{{{b{B`}}}Ab}{{{b{B`}}Bb}Bf}{{{b{B`}}{Bh{Bb}}l}Bj}{{}l}{{}c{}}{{{b{B`}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{bAf}{B`Bn}2{{{b{Ad}}{b{Ad}}AfAf}B`}{{{b{B`}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{b{{Aj{c}}}{}}{bc{}}2{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}``{b{{b{c}}}{}}0{{{b{d}}}{{b{dc}}}{}}0{{{b{C`}}}C`}{{b{b{dc}}}h{}}{{bj}h}{C`Bl}{l{{b{c}}}{}}0{l{{b{dc}}}{}}0{lh}0{C`Bb}{cc{}}0{{{b{c}}}e{}{}}0{{{b{Cb}}}f}{{{b{Cb}}}{{b{Ad}}}}{{{b{Cb}}Bb}Bd}{{{b{Cb}}}Ab}{{{b{Cb}}l}{{Bh{C`}}}}{{{b{Cb}}}{{Bh{Cd}}}}{{{b{Cb}}Blll}{{Bh{Bd}}}}{{{b{Cb}}Bb}Bf}{{{b{Cb}}}{{Bh{Cf}}}}{{{b{Cb}}{Bh{Bb}}l}Bj}{{}l}0{{}c{}}0{{{b{Cb}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{bAf}0{CbBn}2{{{b{Ad}}{b{Ad}}AfAf}Cb}{C`Bb}{{{b{Cb}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{C`Bd}{bc{}}{b{{Aj{c}}}{}}0{bc{}}04{c{{Al{e}}}{}{}}0{{}{{Al{c}}}{}}0{bAn}0{{}c{}}0`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{l{{b{c}}}{}}{l{{b{dc}}}{}}{ChBh}0{lh}{cc{}}{{{b{c}}}e{}{}}{{{b{Ch}}}f}{{{b{Ch}}}{{b{Ad}}}}{{{b{Ch}}Bb}Bd}{{{b{Ch}}}Ab}{{{b{Ch}}Bb}Bf}{{{b{Ch}}{Bh{Bb}}l}Bj}{ChCj}{{}l}{{}c{}}{{{b{Ch}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{bAf}{ChBn}?2{{{b{Ad}}{b{Ad}}AfAf}Ch}{{{b{Ch}}lBbBlBl}Bd}{{{b{Ch}}lBlBl}Bd}{{{b{Ch}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{b{{Aj{c}}}{}}{bc{}}2{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}`````````````{Clf}{b{{b{c}}}{}}000000{{{b{d}}}{{b{dc}}}{}}000000{CnD`}{l{{b{c}}}{}}000000{l{{b{dc}}}{}}000000{lh}000000{ClBh}0{cc{}}000000{{BlBlBbBlBlBb}Db}{{{b{c}}}e{}{}}000000{{{b{Dd}}}f}{{{b{Df}}}f}{{{b{Dh}}}f}{{{b{Bn}}}f}{{{b{Dd}}}{{b{Ad}}}}{{{b{Df}}}{{b{Ad}}}}{{{b{Dh}}}{{b{Ad}}}}{{{b{Bn}}}{{b{Ad}}}}{{{b{Dd}}Bb}Bd}{{{b{Df}}Bb}Bd}{{{b{Dh}}Bb}Bd}{{{b{Bn}}Bb}Bd}{{{b{Dd}}}Ab}{{{b{Df}}}Ab}{{{b{Dh}}}Ab}{{{b{Bn}}}Ab}{{{b{Bn}}}{{b{Dj}}}}{{{b{Dd}}Bb}Bf}{{{b{Df}}Bb}Bf}{{{b{Dh}}Bb}Bf}{{{b{Bn}}Bb}Bf}{{{b{Dd}}{Bh{Bb}}l}Bj}{{{b{Df}}{Bh{Bb}}l}Bj}{{{b{Dh}}{Bh{Bb}}l}Bj}{{{b{Bn}}{Bh{Bb}}l}Bj}{ClCj}{DfDl}{DhDl}{{}l}000000{{}c{}}000000{{{b{Dj}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{{{b{Cn}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{{{b{Dl}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{{{b{Db}}Bb{b{{Bh{Bl}}}}}{{Bh{Bb}}}}{bAf}000000{ClDn}5432{{{b{Ad}}}Cl}{{{b{Ad}}{b{Ad}}}Cn}{{{b{Ad}}{b{Ad}}AfBbBlBlBbBlBl}Bn}0{DfCl}{DhCl}{ClAh}{DbBl}0{{{b{Dj}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{{{b{Cn}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{{{b{Dl}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{{{b{Db}}Bb{b{{Bh{Bb}}}}}{{Bh{Bl}}}}{ClBh}{b{{Aj{c}}}{}}000000{bc{}}000000776543{c{{Al{e}}}{}{}}000000{{}{{Al{c}}}{}}000000{bAn}000000{{}c{}}000000``````````{E`Bl}{CjAh}{CfBl}{b{{b{c}}}{}}000000000{{{b{d}}}{{b{dc}}}{}}000000000{CfAj}{{{b{Eb}}}Eb}{{{b{Ed}}}Ed}{{{b{Cd}}}Cd}{{{b{Ef}}}Ef}{{{b{Cf}}}Cf}{{{b{Eh}}}Eh}{{b{b{dc}}}h{}}00000{{bj}h}00000{CjDn}{EdBl}{CdBl}>{EhBl}{l{{b{c}}}{}}000000000{l{{b{dc}}}{}}000000000{lh}000000000{{{b{Eb}}{b{dn}}}A`}{{{b{Ed}}{b{dn}}}A`}{{{b{Cd}}{b{dn}}}A`}{{{b{Ef}}{b{dn}}}A`}{{{b{Cf}}{b{dn}}}A`}{{{b{Eh}}{b{dn}}}A`}{{{b{Cj}}{b{dn}}}A`}{{{b{E`}}{b{dn}}}A`}{EbBb}{CdDn}{CfDn}{EhDn}{cc{}}000000000{{{b{c}}}e{}{}}000000000{CfBl}{E`Dn}{{}l}000000000{CjAh}{{}c{}}0000000004{bAf}000000000{EdBl}{CdBl}7{EhBl}2180{E`Bl}{CjDn}{CfAj}:{CjBl}0;;;00{E`Ah}={EfBl}{EfAj}{EfDn}{CdDn}1{CfDn}{EhDn}5545{E`Dn};{{{b{Ad}}}{{En{{Bh{Ef}}{El{Ej}}}}}}{{{b{Ad}}}{{En{{Bh{Eb}}{El{Ej}}}}}}{{{b{Ad}}}{{En{{Bh{Ed}}{El{Ej}}}}}}{{{b{Ad}}}{{En{Cj{El{Ej}}}}}}{{{b{Ad}}}{{En{{Bh{E`}}{El{Ej}}}}}}{{{b{Ad}}}{{En{{Bh{Cd}}{El{Ej}}}}}}776{EdBb}:0:{CjAh}{CjDn}0{E`Bl}000:1:{bc{}}00000{b{{Aj{c}}}{}}000000000{bc{}}000000000{CjBb}{c{{Al{e}}}{}{}}000000000{{}{{Al{c}}}{}}000000000{bAn}000000000{{}c{}}000000000{EbBb}<`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{l{{b{c}}}{}}{l{{b{dc}}}{}}{{{b{dD`}}}h}{lh}{cc{}}{{{b{c}}}e{}{}}{D`F`}{{}l}{{}c{}}{{{b{D`}}Bb{b{{Fd{Fb}}}}{b{d{Fd{Fb}}}}}{{Al{h{El{Ej}}}}}}{bAf}{D`Ff}{{{b{Ad}}{b{Ad}}}{{Al{D`{El{Ej}}}}}}{{{b{D`}}}{{Al{h{El{Ej}}}}}}444{b{{Aj{c}}}{}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}{{{Bh{Bd}}BbAbl}{{Bh{{Bh{j}}}}}}{{{b{{Bh{Bb}}}}Af}{{Bh{Bb}}}}{{{b{{Bh{Bb}}}}{b{{Bh{Bb}}}}{b{{Bh{Bb}}}}Bb}{{Bh{j}}}}{{{Bh{{Bh{Bb}}}}{Bh{{Bh{Bb}}}}{Bh{{Bh{Bb}}}}Bbl}{{Bh{{Bh{j}}}}}}{{Bb{b{{Fd{Bb}}}}}{{Bh{Bb}}}}{{{b{{Fd{Bb}}}}{b{{Fd{Bb}}}}}{{Bh{j}}}}{{{b{{Fd{j}}}}}{{Bh{j}}}}{{{b{d{Fd{Bb}}}}{b{{Fd{Bb}}}}}h}{{{b{{Fd{j}}}}}{{Al{{Fh{{Bh{Bb}}{Bh{Bb}}{Bh{Bb}}}}{El{Ej}}}}}}{{{Bh{Bb}}{Bh{Bb}}{Bh{Bb}}BbAb}{{Al{{Bh{j}}{El{Ej}}}}}}{{{b{{Fd{j}}}}Ab}{{Fj{{Bh{j}}}}}}{{{b{{Fd{j}}}}}{{Fj{{Bh{j}}}}}}``````````````{FlBh}{{{b{Fl}}Fn}{{Bh{Fn}}}}{b{{b{c}}}{}}0000000{{{b{d}}}{{b{dc}}}{}}0000000{G`Aj}{GbGd}{GfGd}{{{b{Fl}}}Fl}{{{b{G`}}}G`}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gf}}}Gf}{{{b{Gl}}}Gl}{{{b{Gn}}}Gn}{{b{b{dc}}}h{}}000000{{bj}h}000000{GbBl}{GhFn}{G`Af}{l{{b{c}}}{}}0000000{l{{b{dc}}}{}}0000000{c{{Al{Fl}}}H`}{lh}0000000{FlFn}{G`Fn}{{{b{Fl}}{b{dn}}}A`}{{{b{G`}}{b{dn}}}A`}{{{b{Gh}}{b{dn}}}A`}{{{b{Gj}}{b{dn}}}A`}{{{b{Gf}}{b{dn}}}A`}{{{b{Gl}}{b{dn}}}A`}{{{b{Gn}}{b{dn}}}A`}{G`Fl}{G`Bb}{GjBb}{GnBb}2{cc{}}0000000{{{b{c}}}e{}{}}0000000{GbBh}{{}l}0000000{{}c{}}0000000{GbBb}{GfBb}{bAf}0000000{GhFn}0{FlFn}{G`Gd}{GfFn}{GlFn}{G`Fn}{GnDn}{G`Aj}{{BbBbBlGd{Bh{Bb}}{Bh{Bl}}}Gb}{{FnFnFn{Bh{Bb}}{Bh{Fn}}}Fl}{{BbBbAhAhAfGd{Aj{Af}}{Aj{Af}}FnFnFnBbBb{Bh{Bb}}{Bh{Fn}}}G`}{{BbBbBbFnFnFn}Gh}{{BbBb}Gj}{{BbBbAhGdFnFnHb{Bh{Bb}}{Bh{Fn}}}Gf}{{BbFn}Gl}{{BbFnDn}Gn}{FlBh}{{{b{Gn}}}Hd}{GbBb}{G`Bb}{GfBb}1{G`Ah}{GfFn}{G`Fn}{GlBb}{GfFl}{GhBb}0{G`Hf}{GfAh}{{{b{Fl}}c}AlHh}{GfHb}{GnFn}{{{b{Gb}}l}{{Bh{Bl}}}}{bc{}}000000{b{{Aj{c}}}{}}0000000{bc{}}0000000{c{{Al{e}}}{}{}}0000000{{}{{Al{c}}}{}}0000000{bAn}0000000{GbBh}{FlFn}{{}c{}}0000000?{GjBb}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Hj}}Bb{b{{I`{{Fh{BbGdAb}}{Fh{Hl{Bh{Hn}}}}}}}}AfAfBl{Aj{Bl}}{Aj{Bl}}{Aj{Bl}}{Aj{Af}}}Ib}{{{b{Hj}}BbAfAfAfBlAfBlAf}Bd}{{{b{Hj}}BbAfAfAfBlAfBlAf}Ib}{{{b{Hj}}{Bh{Bb}}AfAfAfBlAfBlAfl}{{Bh{Bd}}}}{{{b{Hj}}{Bh{Bb}}AfAfAfBlAfBlAfl}{{Bh{Ib}}}}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{HjAj}0{cc{}}{{{b{c}}}e{}{}}{{{b{Hj}}{Bh{Ab}}{Bh{Ab}}}{{Bh{Bl}}}}{{{b{Hj}}AbAb}Bl}{{{b{Hj}}{Bh{Bb}}}{{Bh{Bb}}}}{{}l}{{}c{}}{bAf}{{{b{Id}}Afl}Hj}{HjAh}{HjIf}{b{{Aj{c}}}{}}{bc{}}{HjIh}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{Ij}}Bb{b{{I`{{Fh{BbGdAb}}{Fh{Hl{Bh{Hn}}}}}}}}AfAfBl{Aj{Bl}}{Aj{Bl}}{Aj{Bl}}{Aj{Af}}}Ib}{{{b{Ij}}BbAfAfAfBlAfBlAf}Bd}{{{b{Ij}}BbAfAfAfBlAfBlAf}Ib}{{{b{Ij}}{Bh{Bb}}AfAfAfBlAfBlAfl}{{Bh{Bd}}}}{{{b{Ij}}{Bh{Bb}}AfAfAfBlAfBlAfl}{{Bh{Ib}}}}{{{b{Ij}}BbGd}{{Fh{ll}}}}{{{b{Ij}}{Bh{Bb}}{Bh{Gd}}l}{{Bh{{Fh{ll}}}}}}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{IjAj}0{IjIl}{cc{}}{{{b{c}}}e{}{}}{{{b{Ij}}AbAb}Bl}{{{b{Ij}}{Bh{Bb}}}{{Bh{Bb}}}}{{{b{Ij}}BbGdAf}{{Bh{{Bh{Fn}}}}}}{{}l}{{}c{}}{bAf}{{{b{Id}}Afl}{{En{Ij}}}}{IjAh}{IjIf}{b{{Aj{c}}}{}}{bc{}}{IjIn}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{{I`{BbG`}}}}{b{{Bh{Gb}}}}l}{{I`{{Fh{BbGdAb}}{Fh{Hl{Bh{Hb}}}}}}}}{{{b{{I`{BbG`}}}}{b{{Bh{Gb}}}}l}{{I`{{Fh{BbGdAb}}{Fh{Hl{Bh{Hn}}}}}}}}{{{b{{Bh{G`}}}}}{{I`{Bb{Fh{{Bh{Bb}}{Bh{Fn}}}}}}}}{{{b{{Bh{Gn}}}}}{{I`{BbFn}}}}{{{b{{Bh{G`}}}}}{{I`{BbG`}}}}{{{b{{Bh{G`}}}}}{{I`{BbFn}}}}{{{b{{Bh{Gf}}}}}{{I`{Bb{Bh{Gf}}}}}}{{{b{{Bh{Gf}}}}}{{I`{Bb{Fh{{Bh{Fn}}{Bh{{Bh{Bb}}}}{Bh{{Bh{Fn}}}}{Bh{Gd}}{Bh{Hb}}}}}}}}{{{b{{Bh{Gn}}}}}{{J`{Bb}}}}{{{b{{Bh{Gl}}}}}{{I`{BbFn}}}}{JbJd}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{{{b{Jb}}{b{dn}}}A`}{cc{}}{{{b{c}}}e{}{}}{{{b{Jb}}}Il}{{{b{Jb}}}Ih}{{{b{Jb}}}In}{{{b{Jb}}lAf}{{Fh{{Bh{Ab}}{Bh{Ab}}{Bh{Ah}}{Bh{Gd}}{Bh{Fn}}}}}}{{}l}{{}c{}}{bAf}{{{b{Id}}}{{En{Jb}}}}{{{b{Jb}}}{{En{{Bh{Gb}}}}}}{{{b{Jb}}}{{En{{Bh{Gj}}}}}}{{{b{Jb}}}{{En{{Bh{Gn}}}}}}{{{b{Jb}}}{{En{{Bh{Gf}}}}}}{{{b{Jb}}}{{En{{Bh{Jf}}}}}}{{{b{Jb}}}{{En{{Bh{G`}}}}}}{{{b{Jb}}}{{En{{Bh{Gl}}}}}}{{{b{Jb}}}{{En{{Bh{Gh}}}}}}{b{{Aj{c}}}{}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}`{b{{b{c}}}{}}{{{b{d}}}{{b{dc}}}{}}{{{b{If}}BbAfAfBlAf}Bd}{{{b{If}}BbAfAfBlAf}Ib}{{{b{If}}{Bh{Bb}}AfAfBlAfl}{{Bh{Bd}}}}{{{b{If}}{Bh{Bb}}AfAfBlAfl}{{Bh{Ib}}}}{l{{b{c}}}{}}{l{{b{dc}}}{}}{lh}{IfI`}0{IfBh}{cc{}}{{{b{c}}}e{}{}}{{}l}{{}c{}}5{bAf}{{{b{Id}}}{{En{If}}}}777{IfJ`}87{b{{Aj{c}}}{}}{bc{}}{c{{Al{e}}}{}{}}{{}{{Al{c}}}{}}{bAn}{{}c{}}{{{Bh{Bl}}}{{Bh{{Bh{{Bh{Bl}}}}}}}}{{{b{Ad}}Ab{b{{Bh{Bl}}}}AfAf{Aj{Ab}}}Ah}{{{Bh{{b{Ad}}}}{Bh{Ab}}{Bh{{Bh{Bl}}}}AfAfl{Bh{{Aj{Ab}}}}}{{Bh{Ah}}}}","D":"Jn","p":[[1,"reference",null,null,1],[0,"mut"],[6,"AcquisitionMode",10],[1,"unit"],[1,"u8"],[1,"usize"],[5,"Formatter",1046],[8,"Result",1046],[1,"i32"],[1,"str"],[1,"bool"],[5,"String",1047],[6,"Option",1048,null,1],[6,"Result",1049,null,1],[5,"TypeId",1050],[5,"TimsDataset",42],[1,"u32"],[5,"TimsFrame",1051],[5,"RawTimsFrame",1051],[5,"Vec",1052],[5,"TimsSlice",1053],[1,"f64"],[6,"TimsDataLoader",164],[5,"PASEFDDAFragment",71],[5,"TimsDatasetDDA",71],[5,"PasefMsMsMeta",351],[5,"DDAPrecursor",351],[5,"TimsDatasetDIA",129],[5,"GlobalMetaData",351],[5,"TimsRawDataLayout",164],[5,"BrukerLibTimsDataConverter",164],[5,"BrukerTimsDataLibrary",630],[5,"SimpleIndexConverter",164],[10,"TimsData",164],[5,"TimsLazyLoder",164],[5,"TimsInMemoryLoader",164],[10,"IndexConverter",164],[6,"TimsIndexConverter",164],[1,"i64"],[5,"FrameMeta",351],[5,"DiaMsMisInfo",351],[5,"DiaMsMsWindow",351],[5,"DDAPrecursorMeta",351],[5,"DDAFragmentInfo",351],[10,"Error",1054],[5,"Box",1055,null,1],[8,"Result",1056],[1,"u64"],[8,"c_double",1057],[1,"slice"],[5,"Library",1058],[1,"tuple",null,null,1],[8,"Result",1059],[5,"SignalDistribution",674],[1,"f32"],[5,"PeptidesSim",674],[5,"FragmentIonSim",674],[1,"i8"],[5,"IonSim",674],[5,"WindowGroupSettingsSim",674],[5,"FrameToWindowGroupSim",674],[5,"ScansSim",674],[5,"FramesSim",674],[10,"Deserializer",1060],[5,"MzSpectrum",1061],[6,"MsType",1061],[5,"PeptideSequence",1062],[10,"Serializer",1063],[5,"TimsTofSyntheticsFrameBuilderDDA",904],[5,"PeptideProductIonSeriesCollection",1062],[5,"MzSpectrumAnnotated",1064],[5,"BTreeMap",1065],[5,"TimsFrameAnnotated",1064],[5,"Path",1066],[5,"TimsTofSyntheticsPrecursorFrameBuilder",1011],[5,"TimsTransmissionDDA",1067],[5,"TimsTofSyntheticsFrameBuilderDIA",935],[5,"TimsTofCollisionEnergyDIA",1068],[5,"TimsTransmissionDIA",1067],[5,"HashSet",1069],[5,"TimsTofSyntheticsDataHandle",969],[5,"Connection",1056],[5,"PASEFMeta",1067],[5,"DIAFragmentFrameInfo",351],[5,"DIAWindowGroupInfo",351]],"r":[],"b":[[23,"impl-Debug-for-AcquisitionMode"],[24,"impl-Display-for-AcquisitionMode"],[25,"impl-From%3Ci32%3E-for-AcquisitionMode"],[26,"impl-From%3C%26str%3E-for-AcquisitionMode"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAL8DKAAAABsAHQABACAAEAAyAAcAOwAdAFsABQBiAAYAawAeAIsACACVAEMA4AAqABIBAAAUARcALQETAEIBgADNARYA7gGPAH8CAgCDAhUAmgIAAJ0CYQAHAxAAIANsAI4DBwCXAwQAnQMOAK0DCgC5AwQAvwMRANIDAADUAwAA1gMFAN0DBQDkAxIA+AMAAPoDBgACBAEABQQBAAgECwAWBAAA","P":[[15,"T"],[17,""],[18,"T"],[19,""],[20,"T"],[22,""],[27,"T"],[28,"SS,SP"],[29,""],[30,"U"],[31,""],[33,"T"],[34,""],[36,"SS"],[38,"U,T"],[39,"U"],[40,""],[41,"V"],[43,"T"],[47,""],[48,"T"],[49,"SS,SP"],[50,""],[57,"U"],[58,""],[64,"SS"],[66,""],[67,"U,T"],[68,"U"],[69,""],[70,"V"],[73,"T"],[77,""],[78,"T"],[79,""],[81,"T"],[85,""],[88,"T"],[90,"SS,SP"],[92,""],[104,"U"],[106,""],[115,"T"],[116,"SS"],[120,""],[121,"U,T"],[123,"U"],[125,""],[127,"V"],[130,"T"],[134,""],[137,"T"],[138,"SS,SP"],[139,""],[147,"U"],[148,""],[157,"SS"],[159,""],[160,"U,T"],[161,"U"],[162,""],[163,"V"],[177,""],[178,"T"],[192,""],[193,"T"],[207,""],[216,"T"],[223,""],[224,"SS,SP"],[231,""],[266,"U"],[273,""],[303,"SS"],[317,""],[323,"U,T"],[330,"U"],[337,""],[344,"V"],[361,""],[364,"T"],[384,""],[391,"T"],[397,""],[408,"T"],[428,""],[450,"T"],[460,"SS,SP"],[470,""],[483,"U"],[493,""],[561,"T"],[567,"SS"],[587,""],[588,"U,T"],[598,"U"],[608,""],[618,"V"],[628,""],[631,"T"],[635,""],[637,"T"],[638,"SS,SP"],[639,""],[641,"U"],[642,""],[650,"SS"],[652,"U,T"],[653,"U"],[654,""],[655,"V"],[656,""],[684,"T"],[700,""],[710,"T"],[717,""],[727,"T"],[743,"__D"],[744,""],[766,"T"],[774,"SS,SP"],[782,""],[791,"U"],[799,""],[841,"__S"],[842,""],[845,"T"],[852,"SS"],[868,"U,T"],[876,"U"],[884,""],[894,"V"],[902,""],[905,"T"],[907,""],[912,"T"],[914,""],[917,"T"],[918,"SS,SP"],[919,""],[923,"U"],[924,""],[928,"SS"],[930,""],[931,"U,T"],[932,"U"],[933,""],[934,"V"],[936,"T"],[938,""],[945,"T"],[947,""],[951,"T"],[952,"SS,SP"],[953,""],[957,"U"],[958,""],[962,"SS"],[964,""],[965,"U,T"],[966,"U"],[967,""],[968,"V"],[970,"T"],[972,""],[983,"T"],[985,""],[987,"T"],[988,"SS,SP"],[989,""],[994,"U"],[995,""],[1005,"SS"],[1007,"U,T"],[1008,"U"],[1009,""],[1010,"V"],[1012,"T"],[1014,""],[1018,"T"],[1020,""],[1024,"T"],[1025,"SS,SP"],[1026,""],[1027,"U"],[1028,""],[1037,"SS"],[1039,"U,T"],[1040,"U"],[1041,""],[1042,"V"],[1043,""]]}],["rustms",{"t":"CCCCCCHHHHHHHHHHHCCCCCCSSSSSSSSSSSHHHHHHFNNNNNOONNNNNNHNNNHHHHHHCFNNNNNNNNNNNNNNNONNONNNNNNNCCHHHPPPGFFFFFPPPNNNNNNNNNNNNNNNNNONNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNONONNNNONNNNNOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["algorithm","chemistry","ms","proteomics","isotope","peptide","convolve","convolve_pow","generate_isotope_distribution","atomic_product_ion_composition","calculate_amino_acid_composition","calculate_peptide_mono_isotopic_mass","calculate_peptide_product_ion_mono_isotopic_mass","calculate_product_ion_mz","fragments_to_composition","get_num_protonizable_sites","peptide_sequence_to_atomic_composition","constants","element","formula","sum_formula","unimod","utility","AVOGADRO","ELEMENTARY_CHARGE","K_BOLTZMANN","MASS_CO","MASS_ELECTRON","MASS_NEUTRON","MASS_NH3","MASS_PROTON","MASS_WATER","STANDARD_PRESSURE","STANDARD_TEMPERATURE","atomic_weights_mono_isotopic","atoms_isotopic_weights","isotopic_abundance","calculate_mz","ccs_to_one_over_reduced_mobility","one_over_reduced_mobility_to_ccs","SumFormula","borrow","borrow_mut","deref","deref_mut","drop","elements","formula","from","init","into","isotope_distribution","monoisotopic_weight","new","parse_formula","try_from","try_into","type_id","modification_atomic_composition","unimod_modifications_mass","unimod_modifications_mass_numerical","find_unimod_patterns","reshape_prosit_array","unimod_sequence_to_tokens","spectrum","MzSpectrum","add","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","filter_ranged","fmt","from","from_collection","init","intensity","into","mul","mz","new","serialize","sub","to_owned","try_from","try_into","type_id","amino_acid","peptide","amino_acid_composition","amino_acid_masses","amino_acids","A","B","C","FragmentType","PeptideIon","PeptideProductIon","PeptideProductIonSeries","PeptideProductIonSeriesCollection","PeptideSequence","X","Y","Z","amino_acid_count","associate_with_predicted_intensities","atomic_composition","","borrow","","","","","","borrow_decode","borrow_mut","","","","","","c_ions","calculate_isotope_distribution","calculate_isotopic_product_ion_spectrum","calculate_isotopic_spectrum","calculate_mono_isotopic_product_ion_spectrum","calculate_product_ion_series","charge","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","decode","deref","","","","","","deref_mut","","","","","","deserialize","","","","","","drop","","","","","","encode","find_ion_series","fmt","","","","","","","from","","","","","","generate_isotopic_spectrum","","generate_mono_isotopic_spectrum","init","","","","","","intensity","into","","","","","","ion","isotope_distribution","kind","mono_isotopic_mass","","mz","","n_ions","new","","","","","ordinal","peptide_id","peptide_ions","sequence","","serialize","","","","","","to_owned","","","","","","to_sage_representation","to_string","to_tokens","try_from","","","","","","try_into","","","","","","type_id","","","","",""],"q":[[0,"rustms"],[4,"rustms::algorithm"],[6,"rustms::algorithm::isotope"],[9,"rustms::algorithm::peptide"],[17,"rustms::chemistry"],[23,"rustms::chemistry::constants"],[34,"rustms::chemistry::element"],[37,"rustms::chemistry::formula"],[40,"rustms::chemistry::sum_formula"],[58,"rustms::chemistry::unimod"],[61,"rustms::chemistry::utility"],[64,"rustms::ms"],[65,"rustms::ms::spectrum"],[92,"rustms::proteomics"],[94,"rustms::proteomics::amino_acid"],[97,"rustms::proteomics::peptide"],[259,"alloc::vec"],[260,"alloc::string"],[261,"std::collections::hash::map"],[262,"core::option"],[263,"core::result"],[264,"core::any"],[265,"serde::de"],[266,"core::fmt"],[267,"serde::ser"],[268,"bincode::error"],[269,"bincode::de"],[270,"bincode::enc"]],"i":"`````````````````````````````````````````Bb000000000000`000````````Bd0000000000000000000000000`````Ah00``````000Af0Ab1Db312D`Ch42534101242442125341025341025341042534102534102534102534104025534102534101012534102253410333342312341024024253410253410454253410253410253410","f":"``````{{{h{{f{{d{bb}}}}}}{h{{f{{d{bb}}}}}}bbj}{{f{{d{bb}}}}}}{{{h{{f{{d{bb}}}}}}l}{{f{{d{bb}}}}}}{{{h{{A`{nl}}}}bbl}{{f{{d{bb}}}}}}{{{h{Ab}}}{{f{{d{{h{Ad}}l}}}}}}{{{h{Ad}}}{{A`{nl}}}}{{{h{Af}}}b}{{{h{Ad}}Ah}b}{{{h{Ad}}Ah{Aj{l}}}b}{{{f{Ab}}j}{{f{{f{{d{nl}}}}}}}}{{{h{Ad}}}j}{{{h{Af}}}{{A`{{h{Ad}}l}}}}``````{{}b}0000000000{{}{{A`{{h{Ad}}b}}}}{{}{{A`{{h{Ad}}{f{b}}}}}}0{{bl}b}{{bbAlbbb}b}0`{h{{h{c}}}{}}{{{h{An}}}{{h{Anc}}}{}}{j{{h{c}}}{}}{j{{h{Anc}}}{}}{jB`}{BbA`}{Bbn}{cc{}}{{}j}{{}c{}}{{{h{Bb}}l}Bd}{{{h{Bb}}}b}{{{h{Ad}}}Bb}{{{h{Ad}}}{{Bf{{A`{nl}}n}}}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{hBh}{{}{{A`{n{A`{{h{Ad}}l}}}}}}{{}{{A`{{h{Ad}}b}}}}{{}{{A`{Alb}}}}{{{h{Ad}}}{{d{n{f{b}}}}}}{{{f{b}}}{{f{{f{{f{b}}}}}}}}{{{h{Ad}}Bj}{{f{n}}}}``{{BdBd}Bd}{h{{h{c}}}{}}{{{h{An}}}{{h{Anc}}}{}}{{{h{Bd}}}Bd}{{h{h{Anc}}}B`{}}{{hBl}B`}{j{{h{c}}}{}}{j{{h{Anc}}}{}}{c{{Bf{Bd}}}Bn}{jB`}{{{h{Bd}}bbbb}Bd}{{{h{Bd}}{h{AnC`}}}Cb}{cc{}}{{{f{Bd}}}Bd}{{}j}{Bdf}{{}c{}}{{Bdb}c{}}2{{{f{b}}{f{b}}}Bd}{{{h{Bd}}c}BfCd}{{BdBd}c{}}{hc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{hBh}``{{}{{A`{Cf{A`{{h{Ad}}l}}}}}}{{}{{A`{{h{Ad}}b}}}}{{}{{A`{{h{Ad}}{h{Ad}}}}}}````````````{{{h{Af}}}j}{{{h{Af}}lAh{f{b}}BjBj}Ch}{{{h{Ab}}}{{A`{{h{Ad}}l}}}}{{{h{Af}}}{{A`{{h{Ad}}l}}}}{h{{h{c}}}{}}00000{{{h{Ane}}}{{Bf{AfCj}}}{}{{Cn{}{{Cl{c}}}}}}{{{h{An}}}{{h{Anc}}}{}}00000{D`f}{{{h{Db}}bblb}{{f{{d{bb}}}}}}{{{h{Af}}lAhbblb}Bd}{{{h{Db}}bblb}Bd}{{{h{Af}}lAh}Bd}{{{h{Af}}lAh}D`}{Dbl}{D`l}{{{h{Db}}}Db}{{{h{Ah}}}Ah}{{{h{Ab}}}Ab}{{{h{Af}}}Af}{{{h{D`}}}D`}{{{h{Ch}}}Ch}{{h{h{Anc}}}B`{}}00000{{hBl}B`}00000{{{h{Ane}}}{{Bf{AfCj}}}{}{{Dd{}{{Cl{c}}}}}}{j{{h{c}}}{}}00000{j{{h{Anc}}}{}}00000{c{{Bf{Db}}}Bn}{c{{Bf{Ah}}}Bn}{c{{Bf{Ab}}}Bn}{c{{Bf{Af}}}Bn}{c{{Bf{D`}}}Bn}{c{{Bf{Ch}}}Bn}{jB`}00000{{{h{Af}}{h{Anc}}}{{Bf{B`Df}}}Dh}{{{h{Ch}}l}{{Aj{{h{D`}}}}}}{{{h{Db}}{h{AnC`}}}Cb}{{{h{Ah}}{h{AnC`}}}Cb}0{{{h{Ab}}{h{AnC`}}}Cb}{{{h{Af}}{h{AnC`}}}Cb}{{{h{D`}}{h{AnC`}}}Cb}{{{h{Ch}}{h{AnC`}}}Cb}{cc{}}00000{{{h{D`}}bblb}Bd}{{{h{Ch}}bblb}Bd}{{{h{D`}}}Bd}{{}j}00000{Dbb}{{}c{}}00000{AbDb}{{{h{Ab}}bblb}{{f{{d{bb}}}}}}{AbAh}{{{h{Ab}}}b}{{{h{Af}}}b}{{{h{Db}}}b}2{D`f}{{nlbAl{Aj{l}}}Db}{{AhnlbAl{Aj{l}}}Ab}{{n{Aj{l}}}Af}{{l{f{Ab}}{f{Ab}}}D`}{{{f{D`}}}Ch}{DbAl}{AfAj}{Chf}{DbAf}{Afn}{{{h{Db}}c}BfCd}{{{h{Ah}}c}BfCd}{{{h{Ab}}c}BfCd}{{{h{Af}}c}BfCd}{{{h{D`}}c}BfCd}{{{h{Ch}}c}BfCd}{hc{}}00000{{{h{Af}}}{{d{n{f{b}}}}}}{hn}{{{h{Af}}Bj}{{f{n}}}}{c{{Bf{e}}}{}{}}00000{{}{{Bf{c}}}{}}00000{hBh}00000","D":"Fb","p":[[1,"f64"],[1,"tuple",null,null,1],[5,"Vec",259],[1,"reference",null,null,1],[1,"usize"],[1,"i32"],[5,"String",260],[5,"HashMap",261],[5,"PeptideProductIon",97],[1,"str"],[5,"PeptideSequence",97],[6,"FragmentType",97],[6,"Option",262,null,1],[1,"u32"],[0,"mut"],[1,"unit"],[5,"SumFormula",40],[5,"MzSpectrum",65],[6,"Result",263,null,1],[5,"TypeId",264],[1,"bool"],[1,"u8"],[10,"Deserializer",265],[5,"Formatter",266],[8,"Result",266],[10,"Serializer",267],[1,"char"],[5,"PeptideProductIonSeriesCollection",97],[6,"DecodeError",268],[17,"Context"],[10,"BorrowDecoder",269],[5,"PeptideProductIonSeries",97],[5,"PeptideIon",97],[10,"Decoder",269],[6,"EncodeError",268],[10,"Encoder",270]],"r":[],"b":[[180,"impl-Debug-for-FragmentType"],[181,"impl-Display-for-FragmentType"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAANIADwAAAAYAEgAQACkABwAyAAAANgAAADgAAgBBAAAARAAIAE4AAABQAAIAVAABAFcABwBiAFgAwQAJANEAMgA=","P":[[41,"T"],[45,""],[48,"T"],[49,""],[50,"U"],[51,""],[55,"U,T"],[56,"U"],[57,""],[67,"T"],[69,""],[70,"T"],[71,""],[72,"T"],[74,"__D"],[75,""],[78,"T"],[79,""],[82,"U"],[83,"Mul::Output"],[84,""],[86,"__S"],[87,"Sub::Output"],[88,"T"],[89,"U,T"],[90,"U"],[91,""],[113,"T"],[119,"__Context,__D"],[120,"T"],[126,""],[140,"T"],[146,""],[152,"__Context,__D"],[153,"T"],[165,"__D"],[171,""],[177,"__E"],[178,""],[186,"T"],[192,""],[202,"U"],[208,""],[226,"__S"],[232,"T"],[238,""],[241,"U,T"],[247,"U"],[253,""]]}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[27913,25570,7882]}