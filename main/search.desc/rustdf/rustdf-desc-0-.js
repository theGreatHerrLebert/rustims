searchState.loadedDescShard("rustdf", 0, "Returns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the fragment spectra for all PASEF selected precursors\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\ntranslate inverse mobility to scan values calling the …\ntranslate scan to inverse mobility values calling the …\ntranslate tof to mz values calling the bruker library\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nParses the decompressed bruker binary data\nCompresses a byte array using ZSTD\nDecompresses a ZSTD compressed byte array\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nBuild a frame for DIA synthetic experiment\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nMethod to build a map from peptide id to events (absolute …\nMethod to build a map from peptide id to ions\nMethod to build a set of precursor frame ids, can be used …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nBuild a precursor frame\nBuild a collection of precursor frames in parallel\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCreate a new instance of TimsTofSynthetics\nhelper function to reshape the flat prosit predicted …\nhelper function to convert a peptide ion to all possible …")