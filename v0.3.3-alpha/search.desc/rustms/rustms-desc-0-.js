searchState.loadedDescShard("rustms", 0, "convolve two distributions of masses and abundances\nconvolve a distribution with itself n times\ngenerate the isotope distribution for a given atomic …\ncalculate the atomic composition of a product ion\nget a count dictionary of the amino acid composition of a …\ncalculate the monoisotopic mass of a peptide sequence\ncalculate the monoisotopic mass of a peptide product ion …\ncalculate the monoisotopic m/z of a peptide product ion …\ncalculate the atomic composition of a peptide product ion …\ncount the number of protonizable sites in a peptide …\ncalculate the atomic composition of a peptide sequence\nAtomic Weights\nIsotopic Weights\nIsotopic Abundance\ncalculate the m/z of an ion\nconvert CCS to 1 over reduced ion mobility (1/k0)\nconvert 1 over reduced ion mobility (1/k0) to CCS\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGenerate the isotope distribution of the chemical formula.\nCalculate the monoisotopic weight of the chemical formula.\nParse a chemical formula into a map of elements and their …\nUnimod Modifications\nUnimod Modifications Mass\nUnimod Modifications Mass Numerical\nConvert a peptide sequence with UNIMOD annotations to a …\nReshape the flat prosit array into a 3D array of shape …\nConvert a peptide sequence with UNIMOD annotations to a …\nRepresents a mass spectrum with associated m/z values and …\nCombines two <code>MzSpectrum</code> instances by summing up the …\nFilters the m/z values and intensities based on a range of …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nConstructs a new <code>MzSpectrum</code>.\nAmino Acid Composition\nAmino Acid Masses\nAmino Acids\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")